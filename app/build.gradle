apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'jacoco-android'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "io.ray.hexis"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        preDexLibraries = preDexEnabled && !travisBuild
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.5'
    testCompile 'org.robolectric:robolectric:3.2.2'
    testCompile 'com.android.support.test:runner:0.5'
    testCompile 'com.android.support:support-annotations:25.3.1'
    testCompile 'org.robolectric:shadows-support-v4:3.0'
    compile "com.android.support:design:25.3.1"
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}
repositories {
    mavenCentral()
}

android.applicationVariants.all { variant ->
    def variantName = variant.name.capitalize()

    task("jacoco${variantName}Report", type: JacocoReport, dependsOn: "test${variantName}UnitTest") {
        group "Reporting"
        description "Generate ${variantName} Jacoco coverage reports."

        reports {
            xml.enabled = true
            html.enabled = true
        }

        // variant.javaCompile.source does not work
        // traverses from starting point
        sourceDirectories = files(android.sourceSets.main.java.srcDirs)
        executionData = files("${buildDir}/jacoco/test${variantName}UnitTest.exec")
    }
}

